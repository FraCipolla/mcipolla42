= Host-specific information ====================================================
$> hostname; uname -msr
e3r1p3.42roma.it
Darwin 18.7.0 x86_64
$> date
Sat Jan 29 17:21:23 CET 2022
$> gcc --version
Apple clang version 11.0.0 (clang-1100.0.33.17)
Target: x86_64-apple-darwin18.7.0
Thread model: posix
InstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin
$> clang --version
Apple clang version 11.0.0 (clang-1100.0.33.17)
Target: x86_64-apple-darwin18.7.0
Thread model: posix
InstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin

= libft.h=======================================================================
$> norminette libft.h | grep -E '(Error|Warning)'
/Users/mcipolla/Desktop/mcipolla42/libft/libft-war-machine/dirlibft/libft.h: Error!
Error: HEADER_PROT_NAME     (line:   1, col:   1):	Wrong header protection name
Error: INVALID_HEADER       (line:   1, col:   1):	Missing or invalid 42 header
Error: HEADER_PROT_ALL_2    (line:   2, col:   1):	ERROR NOT FOUND
Error: HEADER_PROT_ALL_2    (line:   3, col:   1):	ERROR NOT FOUND
Error: HEADER_PROT_ALL      (line:   9, col:   1):	Header protection must include all the instructions
Error: TAB_REPLACE_SPACE    (line:   9, col:   1):	Found tab when expecting space
Error: HEADER_PROT_ALL      (line:  11, col:   1):	Header protection must include all the instructions
Error: HEADER_PROT_ALL      (line:  12, col:   1):	Header protection must include all the instructions
Error: HEADER_PROT_ALL      (line:  15, col:   1):	Header protection must include all the instructions
Error: HEADER_PROT_ALL      (line:  16, col:   1):	Header protection must include all the instructions
Error: MISALIGNED_FUNC_DECL (line:  16, col:   9):	Misaligned function declaration
Error: HEADER_PROT_ALL      (line:  17, col:   1):	Header protection must include all the instructions
Error: MISALIGNED_FUNC_DECL (line:  17, col:  10):	Misaligned function declaration
Error: HEADER_PROT_ALL      (line:  18, col:   1):	Header protection must include all the instructions
Error: HEADER_PROT_ALL      (line:  19, col:   1):	Header protection must include all the instructions
Error: HEADER_PROT_ALL      (line:  20, col:   1):	Header protection must include all the instructions
Error: HEADER_PROT_ALL      (line:  21, col:   1):	Header protection must include all the instructions
Error: HEADER_PROT_ALL      (line:  22, col:   1):	Header protection must include all the instructions
Error: HEADER_PROT_ALL      (line:  23, col:   1):	Header protection must include all the instructions
Error: MISALIGNED_FUNC_DECL (line:  23, col:  10):	Misaligned function declaration
Error: HEADER_PROT_ALL      (line:  24, col:   1):	Header protection must include all the instructions
Error: MISALIGNED_FUNC_DECL (line:  24, col:  10):	Misaligned function declaration
Error: HEADER_PROT_ALL      (line:  25, col:   1):	Header protection must include all the instructions
Error: HEADER_PROT_ALL      (line:  26, col:   1):	Header protection must include all the instructions
Error: MISALIGNED_FUNC_DECL (line:  26, col:  10):	Misaligned function declaration
Error: HEADER_PROT_ALL      (line:  27, col:   1):	Header protection must include all the instructions
Error: MISALIGNED_FUNC_DECL (line:  27, col:  10):	Misaligned function declaration
Error: HEADER_PROT_ALL      (line:  28, col:   1):	Header protection must include all the instructions
Error: MISALIGNED_FUNC_DECL (line:  28, col:  10):	Misaligned function declaration
Error: HEADER_PROT_ALL      (line:  29, col:   1):	Header protection must include all the instructions
Error: MISALIGNED_FUNC_DECL (line:  29, col:   9):	Misaligned function declaration
Error: HEADER_PROT_ALL      (line:  30, col:   1):	Header protection must include all the instructions
Error: MISALIGNED_FUNC_DECL (line:  30, col:   9):	Misaligned function declaration
Error: HEADER_PROT_ALL      (line:  31, col:   1):	Header protection must include all the instructions
Error: MISALIGNED_FUNC_DECL (line:  31, col:   9):	Misaligned function declaration
Error: HEADER_PROT_ALL      (line:  32, col:   1):	Header protection must include all the instructions
Error: MISALIGNED_FUNC_DECL (line:  32, col:   9):	Misaligned function declaration
Error: HEADER_PROT_ALL      (line:  33, col:   1):	Header protection must include all the instructions
Error: MISALIGNED_FUNC_DECL (line:  33, col:  11):	Misaligned function declaration
Error: HEADER_PROT_ALL      (line:  34, col:   1):	Header protection must include all the instructions
Error: MISALIGNED_FUNC_DECL (line:  34, col:  10):	Misaligned function declaration
Error: HEADER_PROT_ALL      (line:  35, col:   1):	Header protection must include all the instructions
Error: MISALIGNED_FUNC_DECL (line:  35, col:  10):	Misaligned function declaration
Error: HEADER_PROT_ALL      (line:  36, col:   1):	Header protection must include all the instructions
Error: MISALIGNED_FUNC_DECL (line:  36, col:   9):	Misaligned function declaration
Error: HEADER_PROT_ALL      (line:  37, col:   1):	Header protection must include all the instructions
Error: MISALIGNED_FUNC_DECL (line:  37, col:  10):	Misaligned function declaration
Error: HEADER_PROT_ALL      (line:  38, col:   1):	Header protection must include all the instructions
Error: MISALIGNED_FUNC_DECL (line:  38, col:   9):	Misaligned function declaration
Error: HEADER_PROT_ALL      (line:  39, col:   1):	Header protection must include all the instructions
Error: MISALIGNED_FUNC_DECL (line:  39, col:   9):	Misaligned function declaration
Error: HEADER_PROT_ALL      (line:  40, col:   1):	Header protection must include all the instructions
Error: MISALIGNED_FUNC_DECL (line:  40, col:   9):	Misaligned function declaration
Error: HEADER_PROT_ALL      (line:  41, col:   1):	Header protection must include all the instructions
Error: MISALIGNED_FUNC_DECL (line:  41, col:  10):	Misaligned function declaration
Error: HEADER_PROT_ALL      (line:  42, col:   1):	Header protection must include all the instructions
Error: HEADER_PROT_ALL      (line:  43, col:   1):	Header protection must include all the instructions
Error: MISALIGNED_FUNC_DECL (line:  43, col:  10):	Misaligned function declaration
Error: HEADER_PROT_ALL      (line:  44, col:   1):	Header protection must include all the instructions
Error: MISALIGNED_FUNC_DECL (line:  44, col:  10):	Misaligned function declaration
Error: HEADER_PROT_ALL      (line:  45, col:   1):	Header protection must include all the instructions
Error: MISALIGNED_FUNC_DECL (line:  45, col:  10):	Misaligned function declaration
Error: HEADER_PROT_ALL      (line:  46, col:   1):	Header protection must include all the instructions
Error: MISALIGNED_FUNC_DECL (line:  46, col:  10):	Misaligned function declaration
Error: HEADER_PROT_ALL      (line:  47, col:   1):	Header protection must include all the instructions
Error: HEADER_PROT_ALL      (line:  48, col:   1):	Header protection must include all the instructions
Norme check failed

= Compiling libft ==============================================================
$> make re
rm -f ft_isalnum.o ft_isprint.o ft_memcmp.o ft_putchar_fd.o ft_split.o ft_strlcat.o ft_strncmp.o ft_substr.o ft_atoi.o ft_isalpha.o ft_itoa.o ft_memcpy.o ft_putendl_fd.o ft_strchr.o ft_strlcpy.o ft_strnstr.o ft_tolower.o ft_bzero.o ft_isascii.o ft_memcpy.o ft_memmove.o ft_putnbr_fd.o ft_strdup.o ft_strlen.o ft_strrchr.o ft_toupper.o ft_calloc.o ft_isdigit.o ft_memchr.o ft_memset.o ft_putstr_fd.o ft_strjoin.o ft_strmapi.o ft_strtrim.o ft_striteri.o ft_lstadd_back.o ft_lstadd_front.o ft_lstclear.o ft_lstdelone.o ft_lstiter.o ft_lstlast.o ft_lstmap.o ft_lstnew.o ft_lstsize.o
rm -f libft.a
gcc -c -I libft.h -Wall -Wextra -Werror ft_isalnum.c ft_isprint.c ft_memcmp.c ft_putchar_fd.c ft_split.c ft_strlcat.c ft_strncmp.c ft_substr.c ft_atoi.c ft_isalpha.c ft_itoa.c ft_memcpy.c ft_putendl_fd.c ft_strchr.c ft_strlcpy.c ft_strnstr.c ft_tolower.c ft_bzero.c ft_isascii.c ft_memcpy.c ft_memmove.c ft_putnbr_fd.c ft_strdup.c ft_strlen.c ft_strrchr.c ft_toupper.c ft_calloc.c ft_isdigit.c ft_memchr.c ft_memset.c ft_putstr_fd.c ft_strjoin.c ft_strmapi.c ft_strtrim.c ft_striteri.c
ar rc libft.a ft_isalnum.o ft_isprint.o ft_memcmp.o ft_putchar_fd.o ft_split.o ft_strlcat.o ft_strncmp.o ft_substr.o ft_atoi.o ft_isalpha.o ft_itoa.o ft_memcpy.o ft_putendl_fd.o ft_strchr.o ft_strlcpy.o ft_strnstr.o ft_tolower.o ft_bzero.o ft_isascii.o ft_memcpy.o ft_memmove.o ft_putnbr_fd.o ft_strdup.o ft_strlen.o ft_strrchr.o ft_toupper.o ft_calloc.o ft_isdigit.o ft_memchr.o ft_memset.o ft_putstr_fd.o ft_strjoin.o ft_strmapi.o ft_strtrim.o ft_striteri.o
ranlib libft.a

$> make bonus
gcc -c -I libft.h -Wall -Wextra -Werror ft_lstadd_back.c ft_lstadd_front.c ft_lstclear.c ft_lstdelone.c ft_lstiter.c ft_lstlast.c ft_lstmap.c ft_lstnew.c ft_lstsize.c
ft_lstadd_back.c:13:21: error: unknown type name 't_list'
void    ft_lstadd_back(t_list **lst, t_list *new)
                       ^
ft_lstadd_back.c:13:35: error: unknown type name 't_list'
void    ft_lstadd_back(t_list **lst, t_list *new)
                                     ^
ft_lstadd_back.c:15:2: error: use of undeclared identifier 't_list'
        t_list  *temp;
        ^
ft_lstadd_back.c:15:10: error: use of undeclared identifier 'temp'
        t_list  *temp;
                 ^
ft_lstadd_back.c:19:15: error: use of undeclared identifier 'NULL'
                if (*lst == NULL)
                            ^
ft_lstadd_back.c:23:5: error: use of undeclared identifier 'temp'
                                temp = ft_lstlast(*(lst));
                                ^
ft_lstadd_back.c:23:12: error: implicit declaration of function 'ft_lstlast' is invalid in C99 [-Werror,-Wimplicit-function-declaration]
                                temp = ft_lstlast(*(lst));
                                       ^
ft_lstadd_back.c:24:5: error: use of undeclared identifier 'temp'
                                temp -> next = new;
                                ^
8 errors generated.
ft_lstadd_front.c:13:22: error: unknown type name 't_list'
void    ft_lstadd_front(t_list **lst, t_list *new)
                        ^
ft_lstadd_front.c:13:36: error: unknown type name 't_list'
void    ft_lstadd_front(t_list **lst, t_list *new)
                                      ^
2 errors generated.
ft_lstclear.c:13:18: error: unknown type name 't_list'
void    ft_lstclear(t_list **lst, void (*del)(void*))
                    ^
ft_lstclear.c:15:2: error: use of undeclared identifier 't_list'
        t_list  *tmp;
        ^
ft_lstclear.c:15:10: error: use of undeclared identifier 'tmp'
        t_list  *tmp;
                 ^
ft_lstclear.c:21:4: error: use of undeclared identifier 'tmp'
                        tmp = (*lst)-> next;
                        ^
ft_lstclear.c:22:4: error: implicit declaration of function 'ft_lstdelone' is invalid in C99 [-Werror,-Wimplicit-function-declaration]
                        ft_lstdelone(*lst, del);
                        ^
ft_lstclear.c:23:4: error: implicit declaration of function 'free' is invalid in C99 [-Werror,-Wimplicit-function-declaration]
                        free(lst);
                        ^
ft_lstclear.c:24:13: error: use of undeclared identifier 'temp'
                        (*lst) = temp;
                                 ^
7 errors generated.
ft_lstdelone.c:13:19: error: unknown type name 't_list'
void    ft_lstdelone(t_list *lst, void (*del)(void*))
                     ^
ft_lstdelone.c:16:2: error: implicit declaration of function 'free' is invalid in C99 [-Werror,-Wimplicit-function-declaration]
        free(lst);
        ^
ft_lstdelone.c:17:8: error: use of undeclared identifier 'NULL'
        lst = NULL;
              ^
3 errors generated.
ft_lstiter.c:13:17: error: unknown type name 't_list'
void    ft_lstiter(t_list *lst, void (*f)(void *))
                   ^
1 error generated.
ft_lstlast.c:13:1: error: unknown type name 't_list'
t_list  *ft_lstlast(t_list *lst)
^
ft_lstlast.c:13:20: error: unknown type name 't_list'
t_list  *ft_lstlast(t_list *lst)
                    ^
ft_lstlast.c:15:2: error: use of undeclared identifier 't_list'
        t_list  *temp;
        ^
ft_lstlast.c:15:10: error: use of undeclared identifier 'temp'
        t_list  *temp;
                 ^
ft_lstlast.c:17:2: error: use of undeclared identifier 'temp'
        temp = lst;
        ^
ft_lstlast.c:18:9: error: use of undeclared identifier 'temp'
        while (temp -> next != '\0')
               ^
ft_lstlast.c:19:3: error: use of undeclared identifier 'temp'
                temp = temp -> next;
                ^
ft_lstlast.c:19:10: error: use of undeclared identifier 'temp'
                temp = temp -> next;
                       ^
ft_lstlast.c:20:10: error: use of undeclared identifier 'temp'
        return (temp);
                ^
9 errors generated.
ft_lstmap.c:13:1: error: unknown type name 't_list'
t_list  *ft_lstmap(t_list *lst, void *(*f)(void *), void (*del)(void *))
^
ft_lstmap.c:13:19: error: unknown type name 't_list'
t_list  *ft_lstmap(t_list *lst, void *(*f)(void *), void (*del)(void *))
                   ^
2 errors generated.
ft_lstnew.c:13:1: error: unknown type name 't_list'
t_list  *ft_lstnew(void *content)
^
ft_lstnew.c:15:2: error: use of undeclared identifier 't_list'
        t_list  *node;
        ^
ft_lstnew.c:15:10: error: use of undeclared identifier 'node'
        t_list  *node;
                 ^
ft_lstnew.c:17:2: error: use of undeclared identifier 'node'
        node = malloc(sizeof(t_list));
        ^
ft_lstnew.c:17:9: error: implicitly declaring library function 'malloc' with type 'void *(unsigned long)' [-Werror,-Wimplicit-function-declaration]
        node = malloc(sizeof(t_list));
               ^
ft_lstnew.c:17:9: note: include the header <stdlib.h> or explicitly provide a declaration for 'malloc'
ft_lstnew.c:17:23: error: use of undeclared identifier 't_list'
        node = malloc(sizeof(t_list));
                             ^
ft_lstnew.c:18:7: error: use of undeclared identifier 'node'
        if (!node)
             ^
ft_lstnew.c:19:11: error: use of undeclared identifier 'NULL'
                return (NULL);
                        ^
ft_lstnew.c:20:2: error: use of undeclared identifier 'node'
        node -> content = content;
        ^
ft_lstnew.c:21:2: error: use of undeclared identifier 'node'
        node -> next = NULL;
        ^
ft_lstnew.c:21:17: error: use of undeclared identifier 'NULL'
        node -> next = NULL;
                       ^
ft_lstnew.c:22:10: error: use of undeclared identifier 'node'
        return (node);
                ^
12 errors generated.
ft_lstsize.c:13:16: error: unknown type name 't_list'
int     ft_lstsize(t_list *lst)
                   ^
ft_lstsize.c:16:2: error: use of undeclared identifier 't_list'
        t_list  *temp;
        ^
ft_lstsize.c:16:10: error: use of undeclared identifier 'temp'
        t_list  *temp;
                 ^
ft_lstsize.c:19:2: error: use of undeclared identifier 'temp'
        temp = lst;
        ^
ft_lstsize.c:20:9: error: use of undeclared identifier 'temp'
        while (temp -> next != NULL)
               ^
ft_lstsize.c:20:25: error: use of undeclared identifier 'NULL'
        while (temp -> next != NULL)
                               ^
ft_lstsize.c:23:3: error: use of undeclared identifier 'temp'
                temp = temp -> next;
                ^
ft_lstsize.c:23:10: error: use of undeclared identifier 'temp'
                temp = temp -> next;
                       ^
ft_lstsize.c:25:6: error: use of undeclared identifier 'temp'
        if (temp -> next == null)
            ^
ft_lstsize.c:25:22: error: use of undeclared identifier 'null'
        if (temp -> next == null)
                            ^
10 errors generated.
make: *** [bonus] Error 1

$> ls -la libft.a
-rw-r--r--  1 mcipolla  2021_rome  33400 Jan 29 17:21 /Users/mcipolla/Desktop/mcipolla42/libft/libft-war-machine/dirlibft/libft.a

= Part1_functions ==============================================================

= ft_memset.c ==================================================================
$> norminette ft_memset.c | grep -E '(Error|Warning)'
..//ft_memset.c: Error!
Error: BRACE_SHOULD_EOL     (line:  28, col:   1):	Expected newline after brace
Norme check failed
$> clang -Wextra -Wall -Werror -g3 -fsanitize=address ft_memset.c main.c libft.a -o user_exe

= Test 1 ===================================================
$> ./user_exe 01
$> diff -U 3 user_output_test01 test01.output

Diff OK :D
= Test 2 ===================================================
$> ./user_exe 02
$> diff -U 3 user_output_test02 test02.output

Diff OK :D
= Test 3 ===================================================
$> ./user_exe 03
$> diff -U 3 user_output_test03 test03.output

Diff OK :D
= Test 4 ===================================================
$> ./user_exe 04
$> diff -U 3 user_output_test04 test04.output

Diff OK :D

= ft_bzero.c ===================================================================
$> norminette ft_bzero.c | grep -E '(Error|Warning)'
..//ft_bzero.c: Error!
Error: BRACE_SHOULD_EOL     (line:  24, col:   1):	Expected newline after brace
Norme check failed
$> clang -Wextra -Wall -Werror -g3 -fsanitize=address ft_bzero.c main.c libft.a -o user_exe

= Test 1 ===================================================
$> ./user_exe 01
$> diff -U 3 user_output_test01 test01.output

Diff OK :D
= Test 2 ===================================================
$> ./user_exe 02
$> diff -U 3 user_output_test02 test02.output

Diff OK :D

= ft_calloc.c ==================================================================
$> norminette ft_calloc.c | grep -E '(Error|Warning)'
..//ft_calloc.c: Error!
Error: BRACE_SHOULD_EOL     (line:  22, col:   1):	Expected newline after brace
Norme check failed
$> clang -Wextra -Wall -Werror -g3 -fsanitize=address ft_calloc.c main.c libft.a -o user_exe

= Test 1 ===================================================
$> ./user_exe 01
$> diff -U 3 user_output_test01 test01.output

Diff OK :D

= ft_memcpy.c ==================================================================
$> norminette ft_memcpy.c | grep -E '(Error|Warning)'
..//ft_memcpy.c: Error!
Error: BRACE_SHOULD_EOL     (line:  26, col:   1):	Expected newline after brace
Norme check failed
$> clang -Wextra -Wall -Werror -g3 -fsanitize=address ft_memcpy.c main.c libft.a -o user_exe

= Test 1 ===================================================
$> ./user_exe 01
$> diff -U 3 user_output_test01 test01.output

Diff OK :D
= Test 2 ===================================================
$> ./user_exe 02
$> diff -U 3 user_output_test02 test02.output

Diff OK :D
= Test 3 ===================================================
$> ./user_exe 03
$> diff -U 3 user_output_test03 test03.output

Diff OK :D

= ft_memmove.c =================================================================
$> norminette ft_memmove.c | grep -E '(Error|Warning)'
..//ft_memmove.c: Error!
Error: BRACE_SHOULD_EOL     (line:  36, col:   1):	Expected newline after brace
Norme check failed
$> clang -Wextra -Wall -Werror -g3 -fsanitize=address ft_memmove.c main.c libft.a -o user_exe

= Test 1 ===================================================
$> ./user_exe 01
$> diff -U 3 user_output_test01 test01.output

Diff OK :D
= Test 2 ===================================================
$> ./user_exe 02
$> diff -U 3 user_output_test02 test02.output

Diff OK :D
= Test 3 ===================================================
$> ./user_exe 03
$> diff -U 3 user_output_test03 test03.output

Diff OK :D
= Test 4 ===================================================
$> ./user_exe 04
$> diff -U 3 user_output_test04 test04.output

Diff OK :D
= Test 5 ===================================================
$> ./user_exe 05
$> diff -U 3 user_output_test05 test05.output

Diff OK :D

= ft_memchr.c ==================================================================
$> norminette ft_memchr.c | grep -E '(Error|Warning)'
..//ft_memchr.c: Error!
Error: BRACE_SHOULD_EOL     (line:  34, col:   1):	Expected newline after brace
Norme check failed
$> clang -Wextra -Wall -Werror -g3 -fsanitize=address ft_memchr.c main.c libft.a -o user_exe

= Test 1 ===================================================
$> ./user_exe 01
$> diff -U 3 user_output_test01 test01.output

Diff OK :D
= Test 2 ===================================================
$> ./user_exe 02
$> diff -U 3 user_output_test02 test02.output

Diff OK :D
= Test 3 ===================================================
$> ./user_exe 03
$> diff -U 3 user_output_test03 test03.output

Diff OK :D
= Test 4 ===================================================
$> ./user_exe 04
$> diff -U 3 user_output_test04 test04.output

Diff OK :D
= Test 5 ===================================================
$> ./user_exe 05
$> diff -U 3 user_output_test05 test05.output

Diff OK :D
= Test 6 ===================================================
$> ./user_exe 06
$> diff -U 3 user_output_test06 test06.output

Diff OK :D

= ft_memcmp.c ==================================================================
$> norminette ft_memcmp.c | grep -E '(Error|Warning)'
..//ft_memcmp.c: Error!
Error: BRACE_SHOULD_EOL     (line:  29, col:   1):	Expected newline after brace
Norme check failed
$> clang -Wextra -Wall -Werror -g3 -fsanitize=address ft_memcmp.c main.c libft.a -o user_exe

= Test 1 ===================================================
$> ./user_exe 01
$> diff -U 3 user_output_test01 test01.output

Diff OK :D
= Test 2 ===================================================
$> ./user_exe 02
$> diff -U 3 user_output_test02 test02.output

Diff OK :D
= Test 3 ===================================================
$> ./user_exe 03
$> diff -U 3 user_output_test03 test03.output

Diff OK :D
= Test 4 ===================================================
$> ./user_exe 04
$> diff -U 3 user_output_test04 test04.output

Diff OK :D
= Test 5 ===================================================
$> ./user_exe 05
$> diff -U 3 user_output_test05 test05.output

Diff OK :D
= Test 6 ===================================================
$> ./user_exe 06
$> diff -U 3 user_output_test06 test06.output

Diff OK :D
= Test 7 ===================================================
$> ./user_exe 07
$> diff -U 3 user_output_test07 test07.output

Diff OK :D
= Test 8 ===================================================
$> ./user_exe 08
$> diff -U 3 user_output_test08 test08.output

Diff OK :D
= Test 9 ===================================================
$> ./user_exe 09
$> diff -U 3 user_output_test09 test09.output

Diff OK :D

= ft_strlen.c ==================================================================
$> norminette ft_strlen.c | grep -E '(Error|Warning)'
..//ft_strlen.c: Error!
Error: BRACE_SHOULD_EOL     (line:  23, col:   1):	Expected newline after brace
Norme check failed
$> clang -Wextra -Wall -Werror -g3 -fsanitize=address ft_strlen.c main.c libft.a -o user_exe

= Test 1 ===================================================
$> ./user_exe 01
$> diff -U 3 user_output_test01 test01.output

Diff OK :D
= Test 2 ===================================================
$> ./user_exe 02
$> diff -U 3 user_output_test02 test02.output

Diff OK :D
= Test 3 ===================================================
$> ./user_exe 03
$> diff -U 3 user_output_test03 test03.output

Diff OK :D
= Test 4 ===================================================
$> ./user_exe 04
$> diff -U 3 user_output_test04 test04.output

Diff OK :D
= Test 5 ===================================================
$> ./user_exe 05
$> diff -U 3 user_output_test05 test05.output

Diff OK :D
= Test 6 ===================================================
$> ./user_exe 06
$> diff -U 3 user_output_test06 test06.output

Diff OK :D

= ft_strdup.c ==================================================================
$> norminette ft_strdup.c | grep -E '(Error|Warning)'
..//ft_strdup.c: Error!
Error: BRACE_SHOULD_EOL     (line:  34, col:   1):	Expected newline after brace
Norme check failed
$> clang -Wextra -Wall -Werror -g3 -fsanitize=address ft_strdup.c main.c libft.a -o user_exe

= Test 1 ===================================================
$> ./user_exe 01
$> diff -U 3 user_output_test01 test01.output

Diff OK :D

= ft_strlcat.c =================================================================
$> norminette ft_strlcat.c | grep -E '(Error|Warning)'
..//ft_strlcat.c: Error!
Error: BRACE_SHOULD_EOL     (line:  39, col:   1):	Expected newline after brace
Norme check failed
$> clang -Wextra -Wall -Werror -g3 -fsanitize=address ft_strlcat.c main.c libft.a -o user_exe

= Test 1 ===================================================
$> ./user_exe 01
